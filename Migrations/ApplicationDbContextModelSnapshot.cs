// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Peach_Clone.Data;

#nullable disable

namespace Peach_Clone.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("EmployeeSearchApp.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BranchNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContractualHours")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ContractualPay")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeNumber");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeNumber = 101,
                            BranchNumber = "B001",
                            ContractualHours = 40,
                            ContractualPay = 70000m,
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfJoining = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "John",
                            LastName = "Doe",
                            Location = "New York",
                            PositionTitle = "Software Engineer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
